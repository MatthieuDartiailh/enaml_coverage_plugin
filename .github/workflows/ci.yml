name: Continuous Integration
on:
  schedule:
    - cron: "0 0 * * 2"
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/ci.yml
      - enaml_coverage_plugin/*
      - tests/*
      - pyproject.toml
      - setup.cfg
      - setup.py

jobs:
  formatting:
    name: Check code formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install tools
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort mypy pytest
      - name: Isort
        run: |
          isort enaml_coverage_plugin -c;
      - name: Black
        if: always()
        run: |
          black enaml_coverage_plugin --check;
      - name: Flake8
        if: always()
        run: |
          flake8 enaml_coverage_plugin;
      - name: Mypy
        if: always()
        run: |
          mypy enaml_coverage_plugin;
  tests:
    name: Unit tests
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip

      - name: Install project
        run: |
          pip install -e .
      - name: Test with pytest
      # Manually install qt backend for enaml
      # (but not enaml to check the plugin does install it)
        run: |
          pip install pytest-qt pyqt6 qtpy
          python -X dev -m pytest tests -v
      # Measuring coverage for coverage plugin is non trivial and I need more tests
      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v2
      #   with:
      #     name: codecov-umbrella
      #     fail_ci_if_error: true
